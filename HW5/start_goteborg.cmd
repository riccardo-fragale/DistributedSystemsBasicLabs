compile:file("test.erl"), compile:file("node2.erl"), compile:file("storage.erl"), compile:file("key.erl"), compile:file("node3.erl"), compile:file("node4.erl"), compile:file("node1.erl"), io:format("goteborg: compiled (client)~n"), net_adm:ping('kista@Riccardos-MacBook-Air'), net_adm:ping('stockholm@Riccardos-MacBook-Air'), net_adm:ping('spanga@Riccardos-MacBook-Air'), timer:sleep(5000), io:format("~n=== DEMONSTRATION 1: Key Storage ===~n"), [Key] = test:keys(1), io:format("goteborg: generated key ~p~n", [Key]), io:format("goteborg: storing key via kista (n1)~n"), test:add(Key, bread, {n1,'kista@Riccardos-MacBook-Air'}), timer:sleep(1000), io:format("~n=== Checking which node stored the key ===~n"), {n1,'kista@Riccardos-MacBook-Air'} ! print_storage, timer:sleep(200), {n2,'stockholm@Riccardos-MacBook-Air'} ! print_storage, timer:sleep(200), {n3,'spanga@Riccardos-MacBook-Air'} ! print_storage, timer:sleep(1000), io:format("~n=== DEMONSTRATION 2: Ring Probing ===~n"), io:format("--- Probe from kista ---~n"), {n1,'kista@Riccardos-MacBook-Air'} ! probe, timer:sleep(500), io:format("--- Probe from stockholm ---~n"), {n2,'stockholm@Riccardos-MacBook-Air'} ! probe, timer:sleep(500), io:format("--- Probe from spanga ---~n"), {n3,'spanga@Riccardos-MacBook-Air'} ! probe, timer:sleep(500), io:format("~n=== DEMONSTRATION 3: Distributed Lookup ===~n"), io:format("--- Lookup from kista ---~n"), Result1 = test:lookup(Key, {n1,'kista@Riccardos-MacBook-Air'}), io:format("Result: ~p~n", [Result1]), io:format("--- Lookup from stockholm ---~n"), Result2 = test:lookup(Key, {n2,'stockholm@Riccardos-MacBook-Air'}), io:format("Result: ~p~n", [Result2]), io:format("--- Lookup from spanga ---~n"), Result3 = test:lookup(Key, {n3,'spanga@Riccardos-MacBook-Air'}), io:format("Result: ~p~n", [Result3]), io:format("~n=== DEMONSTRATION 4: Handover on Node Join ===~n"), io:format("--- Adding 10 more keys to have data to handover ---~n"), MoreKeys = test:keys(10), test:add(MoreKeys, {n1,'kista@Riccardos-MacBook-Air'}), timer:sleep(1000), io:format("--- Storage BEFORE new node (lulea) joins ---~n"), {n1,'kista@Riccardos-MacBook-Air'} ! print_storage, timer:sleep(200), {n2,'stockholm@Riccardos-MacBook-Air'} ! print_storage, timer:sleep(200), {n3,'spanga@Riccardos-MacBook-Air'} ! print_storage, timer:sleep(1000), io:format("--- Signaling lulea to join the ring (check lulea terminal) ---~n"), {join_signal,'lulea@Riccardos-MacBook-Air'} ! start_join, timer:sleep(5000), io:format("--- Storage AFTER lulea joined (handover should have occurred) ---~n"), {n1,'kista@Riccardos-MacBook-Air'} ! print_storage, timer:sleep(200), {n2,'stockholm@Riccardos-MacBook-Air'} ! print_storage, timer:sleep(200), {n3,'spanga@Riccardos-MacBook-Air'} ! print_storage, timer:sleep(200), {n4,'lulea@Riccardos-MacBook-Air'} ! print_storage, timer:sleep(1000), io:format("~n=== Demo complete - Review the handover messages above ===~n"), timer:sleep(infinity).
